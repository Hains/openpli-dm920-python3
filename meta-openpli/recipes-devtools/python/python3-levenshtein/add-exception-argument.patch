diff --git a/src/Levenshtein/levenshtein_cpp.cxx b/src/Levenshtein/levenshtein_cpp.cxx
index b0ea390..77c3558 100644
--- a/src/Levenshtein/levenshtein_cpp.cxx
+++ b/src/Levenshtein/levenshtein_cpp.cxx
@@ -8197,7 +8197,7 @@ static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
                 unsigned char *bytes = (unsigned char *)&val;
                 ret = _PyLong_AsByteArray((PyLongObject *)v,
                                            bytes, sizeof(val),
-                                           is_little, !is_unsigned);
+                                           is_little, !is_unsigned, 1);
 #else
                 PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                 int bits, remaining_bits, is_negative = 0;
@@ -8548,7 +8548,7 @@ static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
                 unsigned char *bytes = (unsigned char *)&val;
                 ret = _PyLong_AsByteArray((PyLongObject *)v,
                                            bytes, sizeof(val),
-                                           is_little, !is_unsigned);
+                                           is_little, !is_unsigned, 1);
 #else
                 PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                 int bits, remaining_bits, is_negative = 0;
@@ -8821,7 +8821,7 @@ static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
                 unsigned char *bytes = (unsigned char *)&val;
                 ret = _PyLong_AsByteArray((PyLongObject *)v,
                                            bytes, sizeof(val),
-                                           is_little, !is_unsigned);
+                                           is_little, !is_unsigned, 1);
 #else
                 PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                 int bits, remaining_bits, is_negative = 0;
