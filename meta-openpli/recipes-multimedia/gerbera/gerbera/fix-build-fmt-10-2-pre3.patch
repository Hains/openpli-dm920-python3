Follow:
https://github.com/fmtlib/fmt/commit/d70729215fba1d54862e407b626abf86ddf409bf

diff --git a/src/database/sql_format.h b/src/database/sql_format.h
index 4df08098..946ccb1e 100644
--- a/src/database/sql_format.h
+++ b/src/database/sql_format.h
@@ -42,7 +42,7 @@ struct SQLIdentifier {
 template <>
 struct fmt::formatter<SQLIdentifier> : formatter<std::string> {
     template <typename FormatContext>
-    auto format(const SQLIdentifier& tn, FormatContext& ctx) const -> decltype(ctx.out())
+    auto format(const SQLIdentifier& tn, FormatContext& ctx) const -> decltype(ctx.out()) const
     {
         return format_to(ctx.out(), "{}{}{}", tn.quote_begin, tn.name, tn.quote_end);
     }
@@ -61,7 +61,7 @@ struct ColumnUpdate {
 template <>
 struct fmt::formatter<ColumnUpdate> : formatter<std::string> {
     template <typename FormatContext>
-    auto format(const ColumnUpdate& a, FormatContext& ctx) const -> decltype(ctx.out())
+    auto format(const ColumnUpdate& a, FormatContext& ctx) const -> decltype(ctx.out()) const
     {
         return format_to(ctx.out(), "{} = {}", a.column, a.value);
     }
diff --git a/src/util/logger.h b/src/util/logger.h
index 52e0eb88..953a27c3 100644
--- a/src/util/logger.h
+++ b/src/util/logger.h
@@ -135,7 +135,7 @@ template <typename T>
 struct fmt::formatter<T, std::enable_if_t<std::is_enum_v<T>, char>>
     : formatter<std::underlying_type_t<T>> {
     template <typename FormatContext>
-    auto format(const T& value, FormatContext& ctx) -> decltype(ctx.out())
+    auto format(const T& value, FormatContext& ctx) const -> decltype(ctx.out()) const
     {
         return fmt::formatter<std::underlying_type_t<T>>::format(
             static_cast<std::underlying_type_t<T>>(value), ctx);
