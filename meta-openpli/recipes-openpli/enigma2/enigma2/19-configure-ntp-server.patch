diff --git a/lib/python/Components/UsageConfig.py b/lib/python/Components/UsageConfig.py
index 452c17238..22577781e 100644
--- a/lib/python/Components/UsageConfig.py
+++ b/lib/python/Components/UsageConfig.py
@@ -772,21 +801,27 @@ def InitUsageConfig():
 		if configElement.value == "dvb" or (configElement.value == "auto" and not GetIPsFromNetworkInterfaces()):
 			eDVBLocalTimeHandler.getInstance().setUseDVBTime(True)
 			eEPGCache.getInstance().timeUpdated()
-			if os.path.isfile('/var/spool/cron/crontabs/root'):
-				Console().ePopen("sed -i '/ntpdate-sync/d' /var/spool/cron/crontabs/root;")
-			if configElement.value == "dvb" and os.path.islink('/etc/network/if-up.d/ntpdate-sync'):
-				Console().ePopen("unlink /etc/network/if-up.d/ntpdate-sync")
 		else:
 			eDVBLocalTimeHandler.getInstance().setUseDVBTime(False)
 			eEPGCache.getInstance().timeUpdated()
-			if not os.path.isfile('/var/spool/cron/crontabs/root') or not 'ntpdate-sync' in open('/var/spool/cron/crontabs/root').read():
-				Console().ePopen("echo '30 * * * *    /usr/bin/ntpdate-sync silent' >> /var/spool/cron/crontabs/root")
-			if not os.path.islink('/etc/network/if-up.d/ntpdate-sync'):
-				Console().ePopen("ln -s /usr/bin/ntpdate-sync /etc/network/if-up.d/ntpdate-sync")
 	config.ntp.timesync = ConfigSelection(default="auto", choices=[("auto", _("auto")), ("dvb", _("Transponder Time")), ("ntp", _("Internet (ntp)"))])
 	config.ntp.timesync.addNotifier(timesyncChanged)
 	config.ntp.server = ConfigText("pool.ntp.org", fixed_size=False)
-
+	config.ntp.server_old = ConfigText("pool.ntp.org")
+	def setNTPServer(configElement):
+		if configElement.value != config.ntp.server_old.value and configElement.value != "" and " " not in configElement.value:
+			f = open("/etc/ntp.conf", "r")
+			lst = f.readlines()
+			f = open("/etc/ntp.conf", "w")
+			for x in lst:
+				x1 = x.split()
+				if len(x1) > 1 and x1[0] == "server":
+					x1[1] = configElement.value
+					x = " ".join(x1) +"\n"
+				f.write(x)
+			f.close()
+			config.ntp.server_old.value = configElement.value
+	config.ntp.server.addNotifier(setNTPServer, immediate_feedback=False)
 
 def updateChoices(sel, choices):
 	if choices:
