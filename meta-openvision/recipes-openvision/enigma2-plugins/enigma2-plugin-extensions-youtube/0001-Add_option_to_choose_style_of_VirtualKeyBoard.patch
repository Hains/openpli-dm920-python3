From 6465e96a344720ccc8b95b28497f2bf2019f430c Mon Sep 17 00:00:00 2001
From: fairbird <rrrr53@hotmail.com>
Date: Fri, 24 Apr 2020 15:19:10 +0300
Subject: [PATCH] Add_option_to_choose_style_of_VirtualKeyBoard

---

diff --git a/src/YouTubeSearch.py b/src/YouTubeSearch.py
index cf88a2b..d670f53 100644
--- a/src/YouTubeSearch.py
+++ b/src/YouTubeSearch.py
@@ -2,7 +2,7 @@ from __future__ import print_function
 
 from threading import Thread
 from json import loads
-
+import os
 from enigma import ePoint, getDesktop
 from Screens.ChoiceBox import ChoiceBox
 from Screens.Screen import Screen
@@ -15,6 +15,7 @@ from Components.Pixmap import Pixmap
 from Components.Sources.Boolean import Boolean
 from Components.Sources.List import List
 from Components.Sources.StaticText import StaticText
+from Tools.Directories import resolveFilename, SCOPE_PLUGINS
 
 from . import _
 from .compat import compat_quote
@@ -312,8 +313,20 @@ class YouTubeSearch(Screen, ConfigListScreen):
 
 	def openKeyboard(self):
 		self['config'].getCurrent()[1].help_window.instance.hide()
-		self.session.openWithCallback(self.keyBoardCallback, YouTubeVirtualKeyBoard,
-			text=self.searchValue.value)
+		self.VirtualKeyBoard = config.plugins.YouTube.VirtualKeyBoard.value
+		if self.VirtualKeyBoard == "YouTube":
+			if os.path.islink("/usr/lib/enigma2/python/Screens/VirtualKeyBoard.py") and os.path.exists(resolveFilename(SCOPE_PLUGINS, "SystemPlugins/NewVirtualKeyBoard")):
+				from Screens.VirtualKeyBoard import VirtualKeyBoard
+				self.session.openWithCallback(self.keyBoardCallback, VirtualKeyBoard, '')
+			else:
+				self.session.openWithCallback(self.keyBoardCallback, YouTubeVirtualKeyBoard,
+					text = self.searchValue.value)
+		elif self.VirtualKeyBoard == "Image":
+			from Screens.VirtualKeyBoard import VirtualKeyBoard
+			self.session.openWithCallback(self.keyBoardCallback, VirtualKeyBoard, '')
+		else:
+			self.session.openWithCallback(self.keyBoardCallback, YouTubeVirtualKeyBoard,
+				text = self.searchValue.value)
 
 	def keyBoardCallback(self, name):
 		config = self['config'].getCurrent()[1]
diff --git a/src/YouTubeUi.py b/src/YouTubeUi.py
index afa6097..a149c75 100644
--- a/src/YouTubeUi.py
+++ b/src/YouTubeUi.py
@@ -74,6 +74,8 @@ config.plugins.YouTube.onMovieEof = ConfigSelection(default='quit', choices=[
 	('playprev', _('Play previous'))])
 config.plugins.YouTube.onMovieStop = ConfigSelection(default='ask', choices=[
 	('ask', _('Ask user')), ('quit', _('Return to list'))])
+config.plugins.YouTube.VirtualKeyBoard = ConfigSelection(default='YouTube', choices=[
+	('YouTube', _('YouTube VirtualKeyBoard')), ('Image', _('Image VirtualKeyBoard'))])
 config.plugins.YouTube.login = ConfigYesNo(default=False)
 config.plugins.YouTube.downloadDir = ConfigDirectory(default=resolveFilename(SCOPE_HDD))
 config.plugins.YouTube.mergeFiles = ConfigYesNo(default=False)
@@ -1437,6 +1439,9 @@ class YouTubeSetup(ConfigListScreen, Screen):
 		self.list.append(getConfigListEntry(_('Merge downloaded files:'),
 			config.plugins.YouTube.mergeFiles,
 			_('FFmpeg will be used to merge downloaded DASH video and audio files.\nFFmpeg will be installed if necessary.')))
+		configlist.append(getConfigListEntry(_('Choose VirtualKeyBoard Style:'),
+			config.plugins.YouTube.VirtualKeyBoard,
+			_('You can choose what style of VirtualKeyBoard to use it.\nYouTube OR Image (VirtualKeyBoard).')))
 		for p in plugins.getPlugins(where=PluginDescriptor.WHERE_MENU):
 			# TRANSLATORS: Don't translate this! It is used as a variable, so it must be equal to the translation in the plugin!
 			if p.name == _("ServiceApp"):
