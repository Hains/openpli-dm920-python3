diff --git a/lib/python/Components/Network.py b/lib/python/Components/Network.py
index 34b8d7bf2..48a02538f 100644
--- a/lib/python/Components/Network.py
+++ b/lib/python/Components/Network.py
@@ -164,6 +164,10 @@ class Network:
 		for nameserver in self.nameservers:
 			fp.write("nameserver %d.%d.%d.%d\n" % tuple(nameserver))
 		fp.close()
+		fp = file('/etc/nameserversdns.conf', 'w')
+		for nameserver in self.nameservers:
+			fp.write("nameserver %d.%d.%d.%d\n" % tuple(nameserver))
+		fp.close()
 
 	def loadNetworkConfig(self,iface,callback = None):
 		interfaces = []
@@ -216,7 +220,13 @@ class Network:
 			# save configured interfacelist
 			self.configuredNetworkAdapters = self.configuredInterfaces
 			# load ns only once
-			self.loadNameserverConfig()
+			if ifaces[currif]["dhcp"] == True:
+				nameserverfilename = "/etc/resolv.conf"
+				self.loadNameserverConfig(nameserverfilename)
+			else:
+				nameserverfilename = "/etc/nameserversdns.conf"
+				self.loadNameserverConfig(nameserverfilename)
+				self.writeNameserverConfig()
 			print "read configured interface:", ifaces
 			print "self.ifaces after loading:", self.ifaces
 			self.config_ready = True
@@ -224,14 +234,14 @@ class Network:
 			if callback is not None:
 				callback(True)
 
-	def loadNameserverConfig(self):
+	def loadNameserverConfig(self, nameserverfilename):
 		ipRegexp = "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}"
 		nameserverPattern = re.compile("nameserver +" + ipRegexp)
 		ipPattern = re.compile(ipRegexp)
 
 		resolv = []
 		try:
-			fp = file('/etc/resolv.conf', 'r')
+			fp = file(nameserverfilename, 'r')
 			resolv = fp.readlines()
 			fp.close()
 			self.nameservers = []
